package engine;

import com.github.ddth.id.ZookeeperIdGenerator;

/**
 * Zookeeper-implementation of {@link IIdEngine}.
 * 
 * <p>
 * IDs generated by this engine are:
 * <ul>
 * <li>Unique: Unique within the namespace.</li>
 * <li>Ascending: Next generated ID is larger than previous ones.</li>
 * <li>Serial: {@code next-id} = {@code previous-id + 1}!</li>
 * <li>Persistent: (*) backed by Zookeeper.</li>
 * </ul>
 * <p/>
 * 
 * @author ThanhNB
 * @since 0.1.0
 */
public class ZookeeperIdEngine implements IIdEngine {

    private ZookeeperIdGenerator zookeeperIdGenerator;

    protected ZookeeperIdGenerator getZookeeperIdGenerator() {
        return zookeeperIdGenerator;
    }

    public ZookeeperIdEngine setZookeeperIdGenerator(ZookeeperIdGenerator zookeeperIdGenerator) {
        this.zookeeperIdGenerator = zookeeperIdGenerator;
        return this;
    }

    /**
     * Init method
     * 
     * @return
     */
    public ZookeeperIdEngine init() {
        return this;
    }

    /**
     * Destroy method.
     */
    public void destroy() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public long nextId(String namespace) {
        return zookeeperIdGenerator.nextId(namespace);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public long currentId(String namespace) {
        return zookeeperIdGenerator.currentId(namespace);
    }

}
